@page "/servers";

@inject NavigationManager navigationManager;

<h3>Servers</h3>
<br/>

<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (var city in cities)
        {
            <div class="col">
                <div class="card">
                    <img src="@($"images/{city}.png")" class="card-img-top" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-primary">@city</button>
                    </div>
                </div>
                
            </div>
        }
    </div>
</div>

<br/>
<br/>

<ServerComponent @rendermode="InteractiveServer"></ServerComponent>

<ul>
    @foreach (var server in servers)
    {
        <li>
            @server.Name in @server.City is 
            <span style="color:@((server.IsOnline ? "green" : "red"))">
                @(server.IsOnline ? "online" : "offline")
            </span>
            &nbsp;
            <a href="/servers/@server.ServerId" class="btn btn-link">Edit</a>
            &nbsp;

            <EditForm
                Model="server"
                FormName="@($"form-server-{server.ServerId}")"
                OnValidSubmit="@(() => { DeleteServer(server.ServerId); })">
                
                <button type="submit" class="btn btn-danger">
                    Delete
                </button>
            </EditForm>
        </li>
    }

</ul>

<p>
    <a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>


@code {
    private List<Server> servers = ServersRepository.GetServersByCity("Toronto");

    private List<String> cities = CitiesRepository.GetCities();


    private void DeleteServer(int serverId)
    {
        if (serverId > 0)
        {
            ServersRepository.DeleteServer(serverId);
            navigationManager.Refresh();
        }
    }
}
